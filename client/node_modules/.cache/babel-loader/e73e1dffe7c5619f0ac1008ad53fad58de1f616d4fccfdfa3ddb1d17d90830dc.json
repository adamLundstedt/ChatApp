{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\adaml\\\\Desktop\\\\ChatApp\\\\client\\\\src\\\\pages\\\\messenger\\\\AdminMessenger.jsx\",\n  _s = $RefreshSig$();\nimport \"./messenger.css\";\nimport Topbar from \"../../components/topbar/Topbar\";\nimport Message from \"../../components/message/Message\";\nimport { useContext, useEffect, useRef, useState } from \"react\";\nimport { AuthContext } from \"../../context/AuthContext\";\nimport axios from \"axios\";\nimport { io } from \"socket.io-client\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function AdminMessenger() {\n  _s();\n  const [currentChat, setCurrentChat] = useState(null);\n  const [messages, setMessages] = useState([]);\n  const [firstUserName, setFirstUserName] = useState({});\n  const [secondUserName, setSecondUserName] = useState({});\n  const [newMessage, setNewMessage] = useState(\"\");\n  const [arrivalMessage, setArrivalMessage] = useState(null);\n  const [users, setUsers] = useState([]);\n  const socket = useRef();\n  const {\n    user\n  } = useContext(AuthContext);\n  const scrollRef = useRef();\n  useEffect(() => {\n    socket.current = io(\"ws://localhost:8900\");\n    socket.current.on(\"getMessage\", data => {\n      setArrivalMessage({\n        sender: data.senderId,\n        text: data.text,\n        createdAt: Date.now()\n      });\n    });\n    const listConv = async () => {\n      try {\n        const res = await axios.get(`/conversations/list/${user._id}`);\n        if (res.data && res.data.length) {\n          setUsers(res.data);\n        }\n      } catch (err) {\n        console.log(err);\n      }\n    };\n    listConv();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  useEffect(() => {\n    arrivalMessage && (currentChat === null || currentChat === void 0 ? void 0 : currentChat.members.includes(arrivalMessage.sender)) && setMessages(prev => [...prev, arrivalMessage]);\n  }, [arrivalMessage, currentChat]);\n  useEffect(() => {\n    socket.current.emit(\"addUser\", user._id);\n  }, [user]);\n  useEffect(() => {\n    const getMessages = async () => {\n      try {\n        const res = await axios.get(\"/messages/\" + (currentChat === null || currentChat === void 0 ? void 0 : currentChat._id));\n        setMessages(res.data);\n      } catch (err) {\n        console.log(err);\n      }\n    };\n    getMessages();\n  }, [currentChat]);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const message = {\n      sender: user._id,\n      text: newMessage,\n      conversationId: currentChat._id\n    };\n    const receiverId = currentChat.members.find(member => member !== user._id);\n    socket.current.emit(\"sendMessage\", {\n      senderId: user._id,\n      receiverId,\n      text: newMessage\n    });\n    try {\n      const res = await axios.post(\"/messages\", message);\n      setMessages([...messages, res.data]);\n      setNewMessage(\"\");\n    } catch (err) {\n      console.log(err);\n    }\n  };\n  const getConversations = async (firstId, secondId) => {\n    try {\n      const res = await axios.get(\"/conversations/get/\" + firstId + '/' + secondId);\n      setCurrentChat(res.data);\n    } catch (err) {\n      console.log(err);\n    }\n  };\n  const onConvClick = item => {\n    getConversations(item.firstUserId, item.secondUserId);\n    setFirstUserName({\n      name: item.firstUser,\n      _id: item.firstUserId\n    });\n    setSecondUserName({\n      name: item.secondUser,\n      _id: item.secondUserId\n    });\n  };\n  const getSenderName = senderId => {\n    if (firstUserName._id == senderId) {\n      return firstUserName.name;\n    } else if (secondUserName._id == senderId) {\n      return secondUserName.name;\n    }\n  };\n  const delConv = async id => {\n    try {\n      const res = await axios.delete(`/conversations/delete/${id}`);\n      if (res.data.success) {\n        let newUsers = users.filter(item => {\n          if (item._id !== id) {\n            return item;\n          }\n        });\n        setUsers(newUsers);\n      }\n    } catch (err) {\n      console.log(err);\n    }\n  };\n  useEffect(() => {\n    var _scrollRef$current;\n    (_scrollRef$current = scrollRef.current) === null || _scrollRef$current === void 0 ? void 0 : _scrollRef$current.scrollIntoView({\n      behavior: \"smooth\"\n    });\n  }, [messages]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Topbar, {\n      adminCheck: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"messenger\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chatMenu\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chatMenuWrapper\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Conversations: \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 148,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 25\n          }, this), users.map((item, index) => {\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"conversation auto d-flex justify-content-between\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"pointer\",\n                  onClick: () => {\n                    onConvClick(item);\n                  },\n                  children: /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"conversationName\",\n                    children: [item.firstUser, \" & \", item.secondUser]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 156,\n                    columnNumber: 49\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 155,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: /*#__PURE__*/_jsxDEV(\"span\", {\n                    children: /*#__PURE__*/_jsxDEV(\"button\", {\n                      type: \"button\",\n                      class: \"btn btn-danger\",\n                      onClick: () => {\n                        delConv(item._id);\n                      },\n                      children: \"Delete\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 159,\n                      columnNumber: 55\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 159,\n                    columnNumber: 49\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 158,\n                  columnNumber: 45\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 154,\n                columnNumber: 41\n              }, this)\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 153,\n              columnNumber: 37\n            }, this);\n          })]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chatBox\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chatBoxWrapper\",\n          children: currentChat ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"chatBoxTop\",\n              children: messages.map(m => {\n                let name = getSenderName(m.sender);\n                return /*#__PURE__*/_jsxDEV(\"div\", {\n                  ref: scrollRef,\n                  children: /*#__PURE__*/_jsxDEV(Message, {\n                    message: m,\n                    own: m.sender === user._id,\n                    senderName: name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 177,\n                    columnNumber: 49\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 176,\n                  columnNumber: 45\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 172,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"chatBoxBottom\",\n              children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n                className: \"chatMessageInput\",\n                placeholder: \"write something...\",\n                onChange: e => setNewMessage(e.target.value),\n                value: newMessage\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 183,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"chatSubmitButton\",\n                onClick: handleSubmit,\n                children: \"Send\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 189,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 182,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true) : /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"noConversationText\",\n            children: \"Open a conversation to start a chat.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chatOnline\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chatOnlineWrapper\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n_s(AdminMessenger, \"/ERJwA9/XdNBJMfTM65jhoGJEL0=\");\n_c = AdminMessenger;\nvar _c;\n$RefreshReg$(_c, \"AdminMessenger\");","map":{"version":3,"names":["Topbar","Message","useContext","useEffect","useRef","useState","AuthContext","axios","io","AdminMessenger","currentChat","setCurrentChat","messages","setMessages","firstUserName","setFirstUserName","secondUserName","setSecondUserName","newMessage","setNewMessage","arrivalMessage","setArrivalMessage","users","setUsers","socket","user","scrollRef","current","on","data","sender","senderId","text","createdAt","Date","now","listConv","res","get","_id","length","err","console","log","members","includes","prev","emit","getMessages","handleSubmit","e","preventDefault","message","conversationId","receiverId","find","member","post","getConversations","firstId","secondId","onConvClick","item","firstUserId","secondUserId","name","firstUser","secondUser","getSenderName","delConv","id","delete","success","newUsers","filter","scrollIntoView","behavior","map","index","m","target","value"],"sources":["C:/Users/adaml/Desktop/ChatApp/client/src/pages/messenger/AdminMessenger.jsx"],"sourcesContent":["import \"./messenger.css\";\nimport Topbar from \"../../components/topbar/Topbar\";\nimport Message from \"../../components/message/Message\";\nimport { useContext, useEffect, useRef, useState } from \"react\";\nimport { AuthContext } from \"../../context/AuthContext\";\nimport axios from \"axios\";\nimport { io } from \"socket.io-client\";\n\nexport default function AdminMessenger() {\n    const [currentChat, setCurrentChat] = useState(null);\n    const [messages, setMessages] = useState([]);\n    const [firstUserName, setFirstUserName] = useState({});\n    const [secondUserName, setSecondUserName] = useState({});\n    const [newMessage, setNewMessage] = useState(\"\");\n    const [arrivalMessage, setArrivalMessage] = useState(null);\n\n    const [users, setUsers] = useState([]);\n\n\n    const socket = useRef();\n    const { user } = useContext(AuthContext);\n    const scrollRef = useRef();\n\n    useEffect(() => {\n        socket.current = io(\"ws://localhost:8900\");\n        socket.current.on(\"getMessage\", (data) => {\n            setArrivalMessage({\n                sender: data.senderId,\n                text: data.text,\n                createdAt: Date.now(),\n            });\n        });\n        const listConv = async () => {\n            try {\n                const res = await axios.get(`/conversations/list/${user._id}`);\n                if (res.data && res.data.length) {\n                    setUsers(res.data)\n                }\n            } catch (err) {\n                console.log(err);\n            }\n        };\n        listConv();\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    useEffect(() => {\n        arrivalMessage &&\n            currentChat?.members.includes(arrivalMessage.sender) &&\n            setMessages((prev) => [...prev, arrivalMessage]);\n    }, [arrivalMessage, currentChat]);\n\n    useEffect(() => {\n        socket.current.emit(\"addUser\", user._id);\n    }, [user]);\n\n\n    useEffect(() => {\n        const getMessages = async () => {\n            try {\n                const res = await axios.get(\"/messages/\" + currentChat?._id);\n                setMessages(res.data);\n            } catch (err) {\n                console.log(err);\n            }\n        };\n        getMessages();\n    }, [currentChat]);\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n        const message = {\n            sender: user._id,\n            text: newMessage,\n            conversationId: currentChat._id,\n        };\n\n        const receiverId = currentChat.members.find(\n            (member) => member !== user._id\n        );\n\n        socket.current.emit(\"sendMessage\", {\n            senderId: user._id,\n            receiverId,\n            text: newMessage,\n        });\n\n        try {\n            const res = await axios.post(\"/messages\", message);\n            setMessages([...messages, res.data]);\n            setNewMessage(\"\");\n        } catch (err) {\n            console.log(err);\n        }\n    };\n\n    const getConversations = async (firstId, secondId) => {\n        try {\n            const res = await axios.get(\"/conversations/get/\" + firstId + '/' + secondId);\n            setCurrentChat(res.data)\n        } catch (err) {\n            console.log(err);\n        }\n    }\n\n    const onConvClick = (item) => {\n        getConversations(item.firstUserId, item.secondUserId);\n        setFirstUserName({ name: item.firstUser, _id: item.firstUserId });\n        setSecondUserName({ name: item.secondUser, _id: item.secondUserId });\n    }\n\n    const getSenderName = (senderId) => {\n        if (firstUserName._id == senderId) {\n            return firstUserName.name\n        }\n        else if (secondUserName._id == senderId) {\n            return secondUserName.name\n        }\n    }\n\n    const delConv = async (id) => {\n        try {\n            const res = await axios.delete(`/conversations/delete/${id}`);\n            if (res.data.success) {\n                let newUsers = users.filter((item) => {\n                    if (item._id !== id) {\n                        return item\n                    }\n                })\n                setUsers(newUsers)\n            }\n        } catch (err) {\n            console.log(err);\n        }\n    }\n\n    useEffect(() => {\n        scrollRef.current?.scrollIntoView({ behavior: \"smooth\" });\n    }, [messages]);\n\n    return (\n        <>\n            <Topbar adminCheck={true} />\n            <div className=\"messenger\">\n                <div className=\"chatMenu\">\n                    <div className=\"chatMenuWrapper\">\n                        <div>\n                            <h3>Conversations: </h3>\n                        </div>\n                        {\n                            users.map((item, index) => {\n                                return (\n                                    <div key={index} >\n                                        <div className=\"conversation auto d-flex justify-content-between\">\n                                            <div className=\"pointer\" onClick={() => { onConvClick(item); }}>\n                                                <span className=\"conversationName\">{item.firstUser} & {item.secondUser}</span>\n                                            </div>\n                                            <div>\n                                                <span><button type=\"button\" class=\"btn btn-danger\" onClick={() => { delConv(item._id); }} >Delete</button></span>\n                                            </div>\n                                        </div>\n                                    </div>\n                                )\n                            })\n                        }\n                    </div>\n                </div>\n                <div className=\"chatBox\">\n                    <div className=\"chatBoxWrapper\">\n                        {currentChat ? (\n                            <>\n                                <div className=\"chatBoxTop\">\n                                    {messages.map((m) => {\n                                        let name = getSenderName(m.sender);\n                                        return (\n                                            <div ref={scrollRef}>\n                                                <Message message={m} own={m.sender === user._id} senderName={name} />\n                                            </div>\n                                        )\n                                    })}\n                                </div>\n                                <div className=\"chatBoxBottom\">\n                                    <textarea\n                                        className=\"chatMessageInput\"\n                                        placeholder=\"write something...\"\n                                        onChange={(e) => setNewMessage(e.target.value)}\n                                        value={newMessage}\n                                    ></textarea>\n                                    <button className=\"chatSubmitButton\" onClick={handleSubmit}>\n                                        Send\n                                    </button>\n                                </div>\n                            </>\n                        ) : (\n                            <span className=\"noConversationText\">\n                                Open a conversation to start a chat.\n                            </span>\n                        )}\n                    </div>\n                </div>\n                <div className=\"chatOnline\">\n                    <div className=\"chatOnlineWrapper\"></div>\n                </div>\n            </div>\n        </>\n    );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}