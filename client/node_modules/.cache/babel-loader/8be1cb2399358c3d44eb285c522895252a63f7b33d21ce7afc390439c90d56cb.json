{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\adaml\\\\Desktop\\\\ChatApp\\\\client\\\\src\\\\pages\\\\messenger\\\\Messenger.jsx\",\n  _s = $RefreshSig$();\nimport \"./messenger.css\";\nimport Topbar from \"../../components/topbar/Topbar\";\nimport Message from \"../../components/message/Message\";\nimport { useContext, useEffect, useRef, useState } from \"react\";\nimport { AuthContext } from \"../../context/AuthContext\";\nimport axios from \"axios\";\nimport { io } from \"socket.io-client\";\nimport Alert from 'react-bootstrap/Alert';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Messenger() {\n  _s();\n  const [currentChat, setCurrentChat] = useState(null);\n  const [messages, setMessages] = useState([]);\n  const [newMessage, setNewMessage] = useState(\"\");\n  const [arrivalMessage, setArrivalMessage] = useState(null);\n  const [adminId, setAdminId] = useState('');\n  const [users, setUsers] = useState([]);\n  const [searchUser, setSearchUser] = useState('');\n  const [convStarter, setConvStarter] = useState('');\n  const socket = useRef();\n  const {\n    user\n  } = useContext(AuthContext);\n  const scrollRef = useRef();\n  useEffect(() => {\n    socket.current = io(\"ws://localhost:8900\");\n    socket.current.on(\"getMessage\", data => {\n      setArrivalMessage({\n        sender: data.senderId,\n        text: data.text,\n        createdAt: Date.now()\n      });\n    });\n    allUsers();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  useEffect(() => {\n    arrivalMessage && (currentChat === null || currentChat === void 0 ? void 0 : currentChat.members.includes(arrivalMessage.sender)) && setMessages(prev => [...prev, arrivalMessage]);\n  }, [arrivalMessage, currentChat]);\n  useEffect(() => {\n    socket.current.emit(\"addUser\", user._id);\n  }, [user]);\n  useEffect(() => {\n    const getMessages = async () => {\n      try {\n        const res = await axios.get(\"/messages/\" + (currentChat === null || currentChat === void 0 ? void 0 : currentChat._id));\n        setMessages(res.data);\n      } catch (err) {\n        console.log(err);\n      }\n    };\n    getMessages();\n  }, [currentChat]);\n  useEffect(() => {\n    const getData = setTimeout(async () => {\n      let url = `/users/list?userId=${user._id}&username=${searchUser}`;\n      const res = await axios.get(url);\n      if (res.data && res.data.length) {\n        let filteredUsers = res.data.filter(item => {\n          if (!item.isAdmin) return item;\n        });\n        let adminUser = res.data.filter(item => {\n          if (item.isAdmin) return item;\n        });\n        if (adminUser && adminUser.length) {\n          setAdminId(adminUser[0]._id);\n        }\n        setUsers(filteredUsers);\n      }\n    }, 2000);\n    return () => clearTimeout(getData);\n  }, [searchUser]);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const message = {\n      sender: user._id,\n      text: newMessage,\n      conversationId: currentChat._id\n    };\n    const receiverId = currentChat.members.find(member => member !== user._id);\n    socket.current.emit(\"sendMessage\", {\n      senderId: user._id,\n      receiverId,\n      text: newMessage\n    });\n    try {\n      const res = await axios.post(\"/messages\", message);\n      setMessages([...messages, res.data]);\n      setNewMessage(\"\");\n    } catch (err) {\n      console.log(err);\n    }\n  };\n  const getConversations = async _id => {\n    try {\n      const res = await axios.get(\"/conversations/get/\" + user._id + '/' + _id);\n      if (res.data.starter === user._id) {\n        setConvStarter('You');\n      } else {\n        let filteredUsers = users.filter(item => {\n          if (item._id === res.data.starter) {\n            return item;\n          }\n        });\n        if (filteredUsers && filteredUsers.length) {\n          setConvStarter(filteredUsers[0].username);\n        }\n      }\n      setCurrentChat(res.data);\n    } catch (err) {\n      console.log(err);\n    }\n  };\n  const allUsers = async username => {\n    try {\n      let url = `/users/list?userId=${user._id}`;\n      if (username) {\n        url += `&username=${username}`;\n      }\n      const res = await axios.get(url);\n      if (res.data && res.data.length) {\n        let filteredUsers = res.data.filter(item => {\n          if (!item.isAdmin) return item;\n        });\n        let adminUser = res.data.filter(item => {\n          if (item.isAdmin) return item;\n        });\n        if (adminUser && adminUser.length) {\n          setAdminId(adminUser[0]._id);\n        }\n        setUsers(filteredUsers);\n      }\n    } catch (err) {\n      console.log(err);\n    }\n  };\n  useEffect(() => {\n    var _scrollRef$current;\n    (_scrollRef$current = scrollRef.current) === null || _scrollRef$current === void 0 ? void 0 : _scrollRef$current.scrollIntoView({\n      behavior: \"smooth\"\n    });\n  }, [messages]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Topbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"messenger\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chatMenu\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chatMenuWrapper\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Users: \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 176,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                className: \"form-control\",\n                placeholder: \"Type to search user\",\n                value: searchUser,\n                onChange: e => {\n                  setSearchUser(e.target.value);\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 180,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 179,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 13\n          }, this), users.map((item, index) => {\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              onClick: () => {\n                getConversations(item._id);\n              },\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"conversation\",\n                children: /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"conversationName\",\n                  children: item.username\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 188,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 187,\n                columnNumber: 21\n              }, this)\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 186,\n              columnNumber: 19\n            }, this);\n          })]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chatBox\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chatBoxWrapper\",\n          children: currentChat ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"chatBoxTop\",\n              children: [convStarter ? /*#__PURE__*/_jsxDEV(\"div\", {\n                children: /*#__PURE__*/_jsxDEV(Alert, {\n                  variant: 'info',\n                  children: [convStarter, \" started this conversation.\"]\n                }, 'info', true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 204,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 203,\n                columnNumber: 23\n              }, this) : '', messages.map(m => /*#__PURE__*/_jsxDEV(\"div\", {\n                ref: scrollRef,\n                children: /*#__PURE__*/_jsxDEV(Message, {\n                  message: m,\n                  own: m.sender === user._id,\n                  adminMsg: m.sender === adminId\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 211,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 210,\n                columnNumber: 21\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 200,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"chatBoxBottom\",\n              children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n                className: \"chatMessageInput\",\n                placeholder: \"write something...\",\n                onChange: e => setNewMessage(e.target.value),\n                value: newMessage\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 216,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"chatSubmitButton\",\n                onClick: handleSubmit,\n                children: \"Send\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 222,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 215,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true) : /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"noConversationText\",\n            children: \"Open a conversation to start a chat.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 228,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chatOnline\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chatOnlineWrapper\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(Messenger, \"vgcUiJrK8jjiaARQE4WnnviausQ=\");\n_c = Messenger;\nvar _c;\n$RefreshReg$(_c, \"Messenger\");","map":{"version":3,"names":["Topbar","Message","useContext","useEffect","useRef","useState","AuthContext","axios","io","Alert","Messenger","currentChat","setCurrentChat","messages","setMessages","newMessage","setNewMessage","arrivalMessage","setArrivalMessage","adminId","setAdminId","users","setUsers","searchUser","setSearchUser","convStarter","setConvStarter","socket","user","scrollRef","current","on","data","sender","senderId","text","createdAt","Date","now","allUsers","members","includes","prev","emit","_id","getMessages","res","get","err","console","log","getData","setTimeout","url","length","filteredUsers","filter","item","isAdmin","adminUser","clearTimeout","handleSubmit","e","preventDefault","message","conversationId","receiverId","find","member","post","getConversations","starter","username","scrollIntoView","behavior","target","value","map","index","m"],"sources":["C:/Users/adaml/Desktop/ChatApp/client/src/pages/messenger/Messenger.jsx"],"sourcesContent":["import \"./messenger.css\";\nimport Topbar from \"../../components/topbar/Topbar\";\nimport Message from \"../../components/message/Message\";\nimport { useContext, useEffect, useRef, useState } from \"react\";\nimport { AuthContext } from \"../../context/AuthContext\";\nimport axios from \"axios\";\nimport { io } from \"socket.io-client\";\nimport Alert from 'react-bootstrap/Alert';\n\n\nexport default function Messenger() {\n  const [currentChat, setCurrentChat] = useState(null);\n  const [messages, setMessages] = useState([]);\n  const [newMessage, setNewMessage] = useState(\"\");\n  const [arrivalMessage, setArrivalMessage] = useState(null);\n  const [adminId, setAdminId] = useState('');\n\n  const [users, setUsers] = useState([]);\n  const [searchUser, setSearchUser] = useState('');\n  const [convStarter, setConvStarter] = useState('');\n\n\n  const socket = useRef();\n  const { user } = useContext(AuthContext);\n  const scrollRef = useRef();\n\n\n  useEffect(() => {\n    socket.current = io(\"ws://localhost:8900\");\n    socket.current.on(\"getMessage\", (data) => {\n      setArrivalMessage({\n        sender: data.senderId,\n        text: data.text,\n        createdAt: Date.now(),\n      });\n    });\n\n    allUsers();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  useEffect(() => {\n    arrivalMessage &&\n      currentChat?.members.includes(arrivalMessage.sender) &&\n      setMessages((prev) => [...prev, arrivalMessage]);\n  }, [arrivalMessage, currentChat]);\n\n  useEffect(() => {\n    socket.current.emit(\"addUser\", user._id);\n  }, [user]);\n\n\n  useEffect(() => {\n    const getMessages = async () => {\n      try {\n        const res = await axios.get(\"/messages/\" + currentChat?._id);\n        setMessages(res.data);\n      } catch (err) {\n        console.log(err);\n      }\n    };\n    getMessages();\n  }, [currentChat]);\n\n  useEffect(() => {\n    const getData = setTimeout(async () => {\n      let url = `/users/list?userId=${user._id}&username=${searchUser}`\n      const res = await axios.get(url);\n      if (res.data && res.data.length) {\n        let filteredUsers = res.data.filter((item) => {\n          if (!item.isAdmin)\n            return (item)\n        })\n        let adminUser = res.data.filter((item) => {\n          if (item.isAdmin)\n            return (item)\n        })\n        if (adminUser && adminUser.length) {\n          setAdminId(adminUser[0]._id)\n        }\n        setUsers(filteredUsers)\n      }\n    }, 2000)\n\n    return () => clearTimeout(getData)\n  }, [searchUser])\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    const message = {\n      sender: user._id,\n      text: newMessage,\n      conversationId: currentChat._id,\n    };\n\n    const receiverId = currentChat.members.find(\n      (member) => member !== user._id\n    );\n\n    socket.current.emit(\"sendMessage\", {\n      senderId: user._id,\n      receiverId,\n      text: newMessage,\n    });\n\n    try {\n      const res = await axios.post(\"/messages\", message);\n      setMessages([...messages, res.data]);\n      setNewMessage(\"\");\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  const getConversations = async (_id) => {\n    try {\n      const res = await axios.get(\"/conversations/get/\" + user._id + '/' + _id);\n      if (res.data.starter === user._id) {\n        setConvStarter('You')\n      }\n      else {\n        let filteredUsers = users.filter((item) => {\n          if (item._id === res.data.starter) {\n            return (item)\n          }\n        })\n        if (filteredUsers && filteredUsers.length) {\n          setConvStarter(filteredUsers[0].username)\n        }\n      }\n      setCurrentChat(res.data)\n    } catch (err) {\n      console.log(err);\n    }\n  }\n\n\n  const allUsers = async (username) => {\n    try {\n      let url = `/users/list?userId=${user._id}`\n      if (username) {\n        url += `&username=${username}`\n      }\n      const res = await axios.get(url);\n      if (res.data && res.data.length) {\n        let filteredUsers = res.data.filter((item) => {\n          if (!item.isAdmin)\n            return (item)\n        })\n        let adminUser = res.data.filter((item) => {\n          if (item.isAdmin)\n            return (item)\n        })\n        if (adminUser && adminUser.length) {\n          setAdminId(adminUser[0]._id)\n        }\n        setUsers(filteredUsers)\n      }\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  useEffect(() => {\n    scrollRef.current?.scrollIntoView({ behavior: \"smooth\" });\n  }, [messages]);\n\n\n  return (\n    <>\n      <Topbar />\n      <div className=\"messenger\">\n        <div className=\"chatMenu\">\n          <div className=\"chatMenuWrapper\">\n            <div>\n              <h3>Users: </h3>\n            </div>\n            <div>\n              <div>\n                <input type=\"text\" className=\"form-control\" placeholder=\"Type to search user\" value={searchUser} onChange={(e) => { setSearchUser(e.target.value) }} />\n              </div>\n            </div>\n            {\n              users.map((item, index) => {\n                return (\n                  <div key={index} onClick={() => { getConversations(item._id); }}>\n                    <div className=\"conversation\">\n                      <span className=\"conversationName\">{item.username}</span>\n                    </div>\n                  </div>\n                )\n              })\n            }\n          </div>\n        </div>\n        <div className=\"chatBox\">\n          <div className=\"chatBoxWrapper\">\n            {currentChat ? (\n              <>\n                <div className=\"chatBoxTop\">\n                  {\n                    convStarter ?\n                      <div>\n                        <Alert key={'info'} variant={'info'}>\n                          {convStarter} started this conversation.\n                        </Alert>\n                      </div> : ''\n                  }\n                  {messages.map((m) => (\n                    <div ref={scrollRef}>\n                      <Message message={m} own={m.sender === user._id} adminMsg={m.sender === adminId} />\n                    </div>\n                  ))}\n                </div>\n                <div className=\"chatBoxBottom\">\n                  <textarea\n                    className=\"chatMessageInput\"\n                    placeholder=\"write something...\"\n                    onChange={(e) => setNewMessage(e.target.value)}\n                    value={newMessage}\n                  ></textarea>\n                  <button className=\"chatSubmitButton\" onClick={handleSubmit}>\n                    Send\n                  </button>\n                </div>\n              </>\n            ) : (\n              <span className=\"noConversationText\">\n                Open a conversation to start a chat.\n              </span>\n            )}\n          </div>\n        </div>\n        <div className=\"chatOnline\">\n          <div className=\"chatOnlineWrapper\">\n          </div>\n        </div>\n      </div>\n    </>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}